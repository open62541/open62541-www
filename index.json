[{"categories":null,"contents":"The open62541 project exhibited again this year at the booth of the OPC Foundaiton on the Hannover Fair 23. The organization and representation of the project was done by Dr. Julius Pfrommer and Andreas Ebner from Fraunhofer IOSB.\nIn the following video, Dr. Julius Pfrommer talks about news and updates from the open62541 project. The video was recorded at our booth at the Hannover Fair.\nIf you are interested in further news and would like to meet us in person at the next trade show, please subscribe to the mailing list here .\n","permalink":"https://www.open62541.org/articles/23_05_23_hmi23_video/","tags":null,"title":"open6241 @ Hannover Fair 2023"},{"categories":null,"contents":"Workshop OPC UA with open62541\nAt the end of November, the first OPC UA workshop in collaboration of Fraunhofer IOSB and OSADL took place. The two-day online workshop was fully booked after a short time and more than 50 participants attended.\nIn addition to the presentation and hands-on sessions by Fraunhofer and OSADL, a keynote address was given by Mr. Alexander Allmendinger from the OPC Foundation European Certification Lab on the topic \u0026lsquo;OPC UA - THE solution for Industry 4.0 and IIoT\u0026rsquo;. The sessions in the workshop covered the topics OPC UA, open62541 and open source development. The OPC UA track focused on specification and information modeling. The open62541 content ranged from the development of simple client-server applications to advanced build configurations and use of PubSub. The track on open source development was devoted to the development process and licensing issues.\nIn the following video, Dr. Julius Pfrommer talks about the role of open62541 in the OPC UA technology landscape. The video was created for the workshops and recorded at the Forschungsfabrik Karlsruhe.\nIf you are interested in future workshops and don\u0026rsquo;t want to miss anything, you can subscribe to the open62541 mailing list via the website.\n","permalink":"https://www.open62541.org/articles/23_01_12_osadl_workshop/","tags":null,"title":"Workshop on 'OPC UA with open62541' took place"},{"categories":null,"contents":"OSADL LoI Project #4:\nYou might be aware of the past \u0026ldquo;Letter of Intent\u0026rdquo; (LoI) projects done for open62541 in the framework of the OSADL (Open Source in Automation Development Labs). Companies can sign the Letter of Intent with their level of desired contribution and the project starts when a threshold is crossed.\nThe LoI projects have a well-defined scope in terms of content and timeline. They are used for a targeted \u0026ldquo;push\u0026rdquo; which could not be covered by the steady pace of development in the community. For example, PubSub communication was developed in the earlier LoI projects.\nThere is now a call for a fourth LoI project. Unlike in the other project phases, in this phase it is possible for the first time not only to make a financial contribution, but also to provide development resources. Guidance for third-party development is given by Fraunhofer IOSB as the open62541 maintainers.\nMore information on the project\u0026rsquo;s phase #4 is given here:\nPhase #4 of the project\nLetter of Intent of phase #4\nWe would be very glad if you were interested in the upcoming activities of the project and considered to contribute to the project and participate in phase #4.\n","permalink":"https://www.open62541.org/articles/22_06_15_osadl_loi_4/","tags":null,"title":"Announcement - OSADL LoI Phase #4"},{"categories":null,"contents":"open6241 @ Hannover Fair:\nThis year did we again present open62541 at the Hannover Fair. See below the “partner pod” at the booth of the OPC Foundation. It was great connecting with the community directly after two years of remote work. Thanks also to OSADL and Kalycito for co-organizing the booth.\n(Andreas Ebner (left) and Julius Pfrommer (right) at Hannover Fair 2022)\nNew open62541 Website – Interview with Götz Görisch\nThe new open62541-website is now finally online! We also started to publish articles and news on the new website. open624Make sure you read the great interview with Götz Görisch from the VDW – Verein Deutscher Werkzeugmaschinenfabriken e.V. Link to the Interview\nDevelopment News\n Patch Release v1.2.5 and v1.3.1  We received a responsible disclosure of a security issue from Team 82 / Claroty. The default configuration of open62541 allowed for messages of unlimited size / unlimited number of chunks. This can obviously be used for a denial-of-service attack for OPC UA applications on constrained devices.\nThe v1.2.5 and v1.3.1 patch releases rectify the issue (on master as well). The new default are messages up to 512 MB comprised of up to 16k chunks.\nUsers of older versions are advised to adjust the settings in the client/server configuration.\nJSON5 Parsing Backend  JSON5 is a superset of the JSON standard with many usability improvements (https://json5.org/). open62541 now includes the possibility to parse JSON5. This will be used in the future for textfile-based configuration. Going forward, the parsing of the OPC UA data types will be switched over to the new JSON5 backend as well. That way, configuration textfiles can include OPC UA data types in the JSON encoding that are automatically decoded.\nServer switched to the EventLoop model  A lot of work went into the EventLoop model of the core control flow in open62541. The server is now switched over to the EventLoop. The Client, PubSub and Discovery subsystems are now being switched over as well.\nThe EventLoop aggregates all network interactions into a single \u0026ldquo;select\u0026rdquo; syscall. This will enable performant networking with many protocols (OPC UA Binary, PubSub UADP, PubSub MQTT, IP Multicast Discovery and in the future also HTTP, AMQP, etc.) and allows the concurrent operation of multiple servers and clients in a single thread.\nEventually the EventLoop will act as the uniform hardware-abstraction-layer interface so that the core open62541 library is maximally portable and can \u0026ldquo;converge\u0026rdquo; to a stable state.\n","permalink":"https://www.open62541.org/articles/22_06_15_newsletter/","tags":null,"title":"June 2022 Community Newsletter"},{"categories":null,"contents":"1. Who are you and what is your role at VDW? Hi, my name is Götz Görisch. I work at the German Machine Tool Builders` Association (VDW – Verein Deutscher Werkzeugmaschinenfabriken e.V.) as the expert for digitization and open interfaces. I am the elected chairperson for the “OPC UA for Machine Tools joint working group” with the OPC Foundation. In this position I’m leading the companion spec work for OPC 40501 (UA4MT) and 40502 (UA4CNC). Additional I’m an “umati evangelist” for the umati community to drive the adoption of OPC UA in the machine building industries. Eight of the VDW’s members constitute the “core group” which leads the way to develop the OPC UA standards. I coordinate these activities. We are supported by the Institute for Control Engineering of Machine Tools and Manufacturing Units (ISW) from the University of Stuttgart; therefore, it is my pleasure to also introduce Christian von Arnim. He is Research Assistant and is doing most of the work concerning open62541 on our behalf. The browser-based dashboard application at the EMO 2019 was mostly developed by him. Apart from OPC UA, his research area is “reconfigured real-time production networks”.\n2. Since when do you know and use OPC UA and the open62541 SDK? I’m deeply involved in the OPC community since 2018 and already back then I got the attention for open62541. Originally, we started this companion specification work in 2017 with a commercial C++ SDK, which supported us until 2019. Christian von Arnim started working with OPC UA in 2014. After open62541 was chosen as the most promising Open Source OPC UA SDK in his research project back in 2017, he realized several projects using this SDK.\n3. Within the universal machine technology interface (umati), the OPC UA standard is an important part of the solution. What advantages and added value do you see in the use of OPC UA? Although we have “interface” in the name, I would like to resolve the misunderstanding that this is an interface standard. Behind umati is a community of more than 200 partners who share the vision to enable “Plug and Play” for the machine building industry users. Therefore, on the one hand we are developing together with the VDMA and the OPC-Foundation companion specifications to create the Global Production Language based on OPC UA with machine information interoperability. On the other hand, the partners join forces to solve the technical challenges and develop solutions together for the sake of their customers. The Open-Source OPC UA community and open62541 play a crucial role to achieve this goal together. A success story in this regard for the machine tool and woodworking groups to extend open62541 and to upstream feature development can be found at https://umati.org/weinig-group-introduces-woodworking-companion-spec-into-umati-sample-server/ and the https://umati.org/dashboard-opc-ua-client/.\n4. Why did you or the VDW choose the open62541 library for the implementation of the umati standard? As said above, umati is not a standard. It is a community to drive adoption of OPC UA and Open Source in the machinery industry. Specifically, the development of the OPC 40501-1 “UA for Machine Tools” specification led to amendments of the UA base specification. Suddenly, our CS was in the front line of OPC UA development. We noticed that commercial SDKs could not keep up with this rapid development as their development cycles are slower. Hence, this delayed the implementation of our specification in the products of our partners. Therefore, in the end of 2019, we started to develop a Sample Server for UA4MT to use throughout the remaining work ahead and to open source this implementation as a base for the community, other groups and interested parties in the companion specifications.\n5. What added value do you see in using the open6254- OPC UA SDK\u0026rsquo;s? open62541 gave us the flexibility to implement the new features of the base UA specification during the development phase of the specification amendment. Therefore, we were able to have a running server according to spec the day after the release of the new UA version. Our members who were relying on commercial products and SDK had to wait 3-9 month before the new base specification was available to them. This was for my personal the pivot point to fully endorse the development work with Open-Source SDKs like open62541. Furthermore, the ability to fix bugs in the OPC UA SDK by us or partners like Weinig or basysKom, without the need to wait for a next release, greatly improved the development speed. Additionally, the are no runtime license costs and they can be directly reinvested in features and bug fixes. Lastly, an Open-Source SDK like open62541 typically give the users the ability to run on different platforms, Win, Linux, x86, arm64 or in container images without porting costs.\n6. What role do open source libraries play for you in the implementation of umati? For UA4MT we are also looking to provide sample implementations of servers and clients, we are doing this based on open62541, node-opcua and opcua-asyncio. Additionally with the machine tools group we started a project to further standardize towards underlying systems, which led to the first publication of a TransformationEngineAPI and will continue to get an Open Source reference implementation in 2022, where we for sure will make use of other related libraries. For demonstration purpose we also build and continue to develop a dashboard application running at https://umati.app. This is also relying on more than 1000 Open-Source Projects from npm community to make this a reality. Also, there we are trying to provide bug fixes to the upstream projects.\nThank you to the open62541 for this great project to make OPC UA in the industry based on Open Source a reality.\n","permalink":"https://www.open62541.org/articles/22_05_29_vdw_interview/","tags":null,"title":"Interview with Götz Görisch from the VDW"},{"categories":null,"contents":"Release notes:\nRelease notes Version 1.3:\nThis is the first release of the 1.3 release series of open62541. Going forward, only fixes and non-breaking changes will be integrated in the 1.3 release family.\nNew features compared to the previous release series 1.2 include:\n Support for OPC UA PubSub encryption (also TPM-based key handling) Session authentication with x509 certificates (server-side) Support for Event Filters Support for Server Diagnostics Binary/JSON encoding as a stable public API Handling of Subscriptions with different priority Greatly improved Nodeset Compiler, including support for structure values Added UA_order function for all data types (equality test / absolute ordering for binary search trees, etc.) Support for TLS-encrypted MQTT-based PubSub Internally generate temporary self-signed certificates  Besides the major functional additions, many small features, fixes and general improvements went into this release. Particularly, the memory consumption of the information model was reduced by about 1/3 compared to the 1.2 release series.\nNote that the v1.3 release family contains new features compared to v1.0. These have not been part of the certification that was achieved for the example server based on the v1.0 release.\nOlder releases and release notes can be found there: https://github.com/open62541/open62541/releases\nThe new release can be directly downloaded here:\nGithub open62541 1.3\n","permalink":"https://www.open62541.org/articles/22_05_12_release_1_3/","tags":null,"title":"Release: open62541 Version 1.3"},{"categories":null,"contents":"A little known feature that adds a lot of convenience for developers on Linux is the pretty-printing of OPC UA data types. It reduces visual noise and makes the introspection of local variables much more convenient.\nPretty-printing can be activated by loading the definitions as source \u0026lt;open62541\u0026gt;/tools/gdb-pretty-print.py. Below are some before/after examples to showcase the effect.\nNodeIds have four different representations (numeric, string, guid, bytestring). This leads to a very cluttered gdb output due to the C-union where a numeric id is also interpreted as a (string) pointer.\nWith pretty-printing enabled, the NodeId is converted as a human-readable string. This is the standard-defined format that can also be parsed via UA_NodeId_parse.\nAnother complicated datatype is UA_Variant. A variant is a container that can wrap any other OPC UA data type, also as a (multi-dimensional) array. Printing a variant in GDB leads to a messy output. Particularly the data type information is not automatically resolved. Furthermore, the value is hidden behind an opaque void-pointer.\nThe variant is immediately understandable with pretty-printing enabled. In this example, the variant contains a scalar timestamp value.\n@Author Dr. -Ing. Julius Pfrommer, 2021\n","permalink":"https://www.open62541.org/articles/21_12_01_pritty_printing/","tags":null,"title":"Feature Spotlight: Pretty-printing in the gdb Debugger"},{"categories":null,"contents":"Release notes:\nThis is the third patch release for the 1.2 release family of open62541. There were only bugfixes and no API-breaking changes applied for the patch release. Important changes compared to the previous release include:\n fix(plugin): Remove assert about the key length in ua_openssl_basic256sha256.c fix(arch): Use AF_INET in the socket hints if IPV6 is disabled fix(arch) : ServerNetworkLayerTCP_start continues if one network interface fails to bind fix(pubsub): Allow multiple readers on the same NetworkMessage  open62541 (http://open62541.org) is an open source and free implementation of OPC UA (OPC Unified Architecture) written in the common subset of the C99 and C++98 languages. The library is usable with all major compilers and provides the necessary tools to implement dedicated OPC UA clients and servers, or to integrate OPC UA-based communication into existing applications. The open62541 library is platform independent. All platform-specific functionality is implemented via exchangeable plugins. Plugin implementations are provided for the major operating systems.\nopen62541 is licensed under the Mozilla Public License v2.0 (MPLv2). This allows the open62541 library to be combined and distributed as part of proprietary software. Only changes to the files of the open62541 library itself need to be licensed under the MPLv2 when copied and distributed. The plugins, as well as the server and client examples are in the public domain (CC0 license). They can be reused under any license and changes do not have to be published.\nNew features compared to the previous release series 1.1 are:\n Support for additional OPC UA Services (SetTriggering, TransferSubscription) Support for more data-types: structures with optional fields and for unions Support for pretty-printing of OPC UA data-types Support for parsing of standard-defined human-readable NodeIds, BrowsePaths, etc. Support for OpenSSL-based encryption and certificate validation Support for WebSocket Secure (wss) Improved support for Events and Alarms\u0026amp;Conditions Improved support for PubSub subscribers Improved support for realtime PubSub by integration with external interrupt handling and a configurable realtime \u0026ldquo;fast path\u0026rdquo; Update to the v1.04 nodeset definitions from the OPC Foundation  Besides the major functional additions, many small features, fixes and general improvements went into this release.\nWith the release of the release candidate, the API for the 1.2 release series is frozen. Only fixes and non-breaking changes will be integrated going forward. Note that the v1.2 release family contains new features compared to v1.0. These have not been part of the certification that was achieved for the example server based on the v1.0 release.\nThe new release can be directly downloaded here:\nGithub open62541 1.2.3\n","permalink":"https://www.open62541.org/articles/21_12_01_release_1_2_3/","tags":null,"title":"Release: open62541 Version 1.2.3"},{"categories":null,"contents":"The open62541 has now a new modern website. The website is built with the HUGO Framework (https://gohugo.io/) and the content is therefore completely written in markdown. The website is public visible in our open62541-www repository. The deploy process of the new webpage is automated by a github action. During the deploy phase the markdown files are compiled with the hugo tools to a static website.\n New responsive design Secure static website Publicly visible in the open62541-www repository  ","permalink":"https://www.open62541.org/articles/21_11_30_new-website/","tags":null,"title":"Announcement: New Website for the open62541 project"},{"categories":null,"contents":"","permalink":"https://www.open62541.org/community/","tags":null,"title":""},{"categories":null,"contents":null,"permalink":"https://www.open62541.org/","tags":null,"title":"open62541"},{"categories":null,"contents":null,"permalink":"https://www.open62541.org/articles/","tags":null,"title":"Articles"},{"categories":null,"contents":"","permalink":"https://www.open62541.org/","tags":null,"title":"Syna Theme"},{"categories":null,"contents":"","permalink":"https://www.open62541.org/documentation/","tags":null,"title":"Documentation"},{"categories":null,"contents":"Responsible for the website content\nopen62541-Core-Maintainer\nmailto: open62541@googlegroups.com\nc/o\nDr. -Ing. Julius Pfrommer\nFraunhoferstraße 1\n76131 Karlsruhe\njulius.pfrommer(at)iosb.fraunhofer.de\n ","permalink":"https://www.open62541.org/about/","tags":null,"title":"About"},{"categories":null,"contents":"OPC Foundation Certified for Compliance logo is a trademark of the OPC Foundation and may be used only by written permission of the OPC Foundation. Any unauthorized use of the Certified for Compliance logo is prohibited. OPC Foundation Certified for Compliance logo indicates that this product has been tested by an independent certification lab and certified to be compliant with the following OPC UA Profiles which are part of the OPC UA Specifications:\nProfile:\nMicro Embedded Device Server\nSecurity Policies:\nBasic128Rsa15\nBasic256\nBasic256Sha256\nUser Tokens:\nAnonymous Facet\nUser Name Password Server Facet\nMethod Server Facet\nNode Management Facet\nAdditional information about compliance testing, logo program and a summary of test results can be found at www.opcfoundation.org for: Open62541 OPC UA Server (server_ctt) 1.0.0-rc5.\nThe precise version used for the certification has the commit hash 1135945fe8eb8e4e9df7694e5d564443a6d4df80 . Later releases in the 1.0 release family contain only bugfixes in comparison to the certified version.\nCertification Limitations \u0026amp; Common Misconceptions:\nCertification was done for a reference server (\u0026ldquo;CTT server\u0026rdquo;) based on the open62541 SDK and not for the SDK itself. The server implementation used for the certification can be found at https://github.com/open62541/open62541/blob/1.0/examples/server_ctt.c. No Certification Grandfathering: There is no grandfathering of certification, users who want their application based on open62541 to be certified need to undergo separate testing at the OPC Foundation Test Lab Certification is attempted for selected feature-sets (facets). Some features are implemented but not under test at this time. These features are disabled by default in the SDK:\nFeatures submitted for testing are based on granularity of \u0026ldquo;facets\u0026rdquo; (Micro Embedded Device Server, Method Facet, Node Management Facet and the SecurityPolicies). Some additional conformance units (e.g. for events) are already implemented. But the corresponding \u0026ldquo;facet\u0026rdquo; is not yet complete JSON encoding is implemented in open62541. But the feature cannot be certified due to the lack of official test cases and tools Historical data access is implemented in open62541. But the feature is not testable with the current CTT. We did however implement the standard test cases for historical data (that are part of the spec) in our unit tests At the time of writing this section (Sep 2019), PubSub (UADP) is implemented in open62541. But the feature cannot be certified due to the lack of official test cases and testing tools. We did however implement the standard cases used for the PubSub interoperability workshop, where we participated earlier this year. It should be noted that Kalycito is member of IIC TSN Testbed and OPC Foundation and Fraunhofer IOSB is a member of OPC Foundation. This enables us to closely follow the technology evolution path and be an early adopter. Interested in our work? Next steps to take OSADL continues to actively support the project and fosters addition of new features and functions. To do so it welcomes new participants who may select from various contribution levels as outlined at https://www.osadl.org/LoI2 As this is a rapidly evolving technology space, the official standards and compliance tools are evolving fast and the open source code is evolving fast as well. You might want to get external support to get your products certified and also integrate the latest feature additions to open source into your products as soon as possible. Kalycito provides such support for integration and certification and you can find more details abut their services at https://www.kalycito.com/opc-ua-sdk/.\n","permalink":"https://www.open62541.org/certification/","tags":null,"title":"Certified SDK"},{"categories":null,"contents":"Building from source\nA detailed description on how to build from source can be found here: Installing\nPrebuilt packages\nPrebuild binaries You can always find prebuild binaries for every release on our Github Release Page.\n","permalink":"https://www.open62541.org/download/","tags":null,"title":"Team"}]